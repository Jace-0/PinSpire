name: Backend CI

on:
  push:
    branches: [main]
    paths:
      - "app/backend/**"
      - ".github/workflows/backend-ci.yml"

  pull_request:
    branches: [main]
    paths:
      - "app/backend/**"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch: # Allow manual triggering

jobs:
  backend_pipeline:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./app/backend

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pinspire_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./app/backend/package-lock.json"

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

      - name: Initialize database
        run: npm run db:init
        env:
          NODE_ENV: test
          TEST_POSTGRES_URL: postgres://postgres:postgres@localhost:5432/pinspire_test
          TEST_REDIS_URL: redis://localhost:6379
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Run integration tests with Supertest
        run: npm run test:supertest
        env:
          NODE_ENV: test
          TEST_POSTGRES_URL: postgres://postgres:postgres@localhost:5432/pinspire_test
          TEST_REDIS_URL: redis://localhost:6379
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
          TEST_CLOUDINARY_CLOUD_NAME: ${{ secrets.TEST_CLOUDINARY_CLOUD_NAME}}
          TEST_CLOUDINARY_API_KEY: ${{ secrets.TEST_CLOUDINARY_API_KEY}}
          TEST_CLOUDINARY_API_SECRET: ${{ secrets.TEST_CLOUDINARY_API_SECRET}}
